/**
 * Print out a list with all the filters that are passed as argument
 * This will use the [../functions/_s-filter-map.scss] function to parse the filters
 *
 * @param 	 	{List}<String> 			$filters 			The registered filter(s) name(s) or the filter(s) string(s) to transform into list
 *
 * @example
 * // register a filter
 * \@include s-setup((
 * 		filters : (
 * 			myCoolFilter : box-shadow(#000 0 0 10px) blur(30px),
 * 			// other filters...
 * 		)
 * ));
 *
 * // registered filter
 * .my-cool-elememt {
 * 		\@include s-filter(myCoolFilter);
 * 		// filter : box-shadow(#000 0 0 10px) blur(30px);
 * }
 *
 * // custom filter
 * .my-cool-element {
 * 		\@include s-filter(myCoolFilter invert(100%));
 * 		// filter : box-shadow(#000 0 0 10px) blur(30px) invert(100%);
 * }
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@mixin s-filter(
	$filter
) {
	$filter-map : s-filter-map($filter);
	$res : ();
	@each $name, $value in $filter-map {
		@if $name == 'text-shadow' {
			text-shadow : #{$value};
		} @else if $name == 'box-shadow' {
			box-shadow : #{$value};
		} @else {
			$res : append($res, unquote("#{$name}(#{$value})"));
		}
	}
	// apply filter if needed
	@if length($res) > 0 {
		filter : #{$res};
	}
}
