$_s-base64-icons : (
	search : '<svg version="1.2" xmlns="http://www.w3.org/2000/svg" width="1000" height="1000" viewBox="0 0 1000 1000"><path x="0" y="0" style="fill:%color" d="M764.7 382.4c0-105.8-37.4-196.2-112.3-271.2C578.2 37.1 488.2 0 382.3 0S186.1 37.1 111.2 111.2C37.1 186.2 0 276.6 0 382.4s37.1 195.8 111.2 270c75 74.9 165.4 112.4 271.2 112.3s195.8-37.5 270-112.3c74.9-74.2 112.3-164.2 112.3-270M610.6 153c63.5 63.4 95.3 139.9 95.3 229.4S674.2 548 610.6 610.7c-62.7 63.5-138.8 95.2-228.2 95.3-89.5 0-165.9-31.7-229.4-95.3C90.3 548 58.9 471.9 58.9 382.4S90.3 216.4 153 153c63.4-62.7 139.9-94.1 229.4-94.1S547.9 90.3 610.6 153M1000 970.7c.1-8-3.1-15.6-8.8-21.2L720 678.3c-5.4-5.5-12.9-8.4-20.6-8.2-15.6-.7-28.7 11.4-29.4 27v2.4c-.2 7.7 2.8 15.1 8.2 20.6l271.2 271.2c5.5 5.7 13.2 8.9 21.2 8.8 16.1-.5 29-13.4 29.4-29.4z"/></svg>',
	arrow-down : '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="32" height="24" viewBox="0 0 32 24"><polygon points="0,0 32,0 16,24" style="fill:%color"></polygon></svg>'
);

@function s-base64-icon(
	$icon,
	$color : default
) {

	// check if the icon exist
	@if not map-has-key($_s-base64-icons, $icon) {
		@error("The wanted icon \"#{$icon}\" does not exist. Either check your spelling and the doc for available icons, or register your custom one with \"s-register-base64-icon\" mixin...");
	}

	$iconCode : map-get($_s-base64-icons, $icon);

	// process the code to make it readable by browsers like firefox
	// $iconCode : str-replace($iconCode, ':', '%3A');
	$iconCode : str-replace($iconCode, '%color', "#{s-color($color)}");

	// return the code
	@return _s-svg-uri($iconCode);
	// @return "data:image/svg+xml;utf8,#{$iconCode}";

}



////
/// Helper function to easily use an SVG inline in CSS
/// without encoding it to base64, saving bytes.
/// It also helps with browser support.
////

/// A small function allowing skipping base64 encoding
/// and simply pasting the SVG markup right in the CSS.
/// @author Jakob Eriksen
/// @link http://codepen.io/jakob-e/pen/doMoML
/// @param {String} $svg - SVG image to encode
/// @return {String} - Encoded SVG data uri
@function _s-svg-uri($svg) {
    $encoded: '';
    $slice: 2000;
    $index: 0;
    $loops: ceil(str-length($svg) / $slice);

    @for $i from 1 through $loops {
        $chunk: str-slice($svg, $index, $index + $slice - 1);
        $chunk: _s-str-replace-uri($chunk, '"', "'");
        $chunk: _s-str-replace-uri($chunk, '<', '%3C');
        $chunk: _s-str-replace-uri($chunk, '>', '%3E');
        $chunk: _s-str-replace-uri($chunk, '&', '%26');
        $chunk: _s-str-replace-uri($chunk, '#', '%23');
        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice;
    }

    @return "data:image/svg+xml;charset=utf8,#{$encoded}";
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @link http://sassmeister.com/gist/1b4f2da5527830088e4d
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function _s-str-replace-uri($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + _s-str-replace-uri(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}
