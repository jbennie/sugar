/**
 * @name 	BEM mixins
 * Some useful mixins to work with BEM methodology
 */

/**
 * BEM block selector
 * @param 		{String} 				$name 		The block name
 * @param 		{String|List<String>} 	[$extend=false] 	The list of item to extends
 * @example 	scss
 * \@include s-Bem('card') {
 *  	background: white;
 * }
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin s-Bem(
	$name,
	$extend : false
) {
	@at-root {
		.#{$name} {
			@if $extend {
				@each $ext in $extend {
					@extend .#{$ext} !optional;
				}
			}
			@content;
		}
	}
}

/**
 * BEM element selector
 * @param 		{String} 				$name 		The block name
 * @param 		{String|List<String>} 	[$extend=false] 	The list of item to extends
 * @example 	scss
 * \@include s-Bem(card) {
 * 	background:white;
 *
 * 	\@include s-bEm(title) {
 * 		font-size:20px;
 * 	}
 * }
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin s-bEm(
	$name,
	$extend : false
) {
	$separator : s-setting('BEM.element-separator');
	$this : #{&};
	@if $this == '' or not $this {
		$this : '.';
		$separator : '';
	}
	@at-root {
		#{$this}#{$separator}#{$name} {
			@if $extend {
				@each $ext in $extend {
					@extend #{$this}#{$separator}#{$ext} !optional;
				}
			}
 			@content;
		}
	}
}

/**
 * BEM modifier selector
 * @param 		{String} 				$name 		The block name
 * @param 		{String|List<String>} 	[$extend=false] 	The list of item to extends
 * @param 		{Boolean} 				[$standelone=s-setting('BEM.standelone')] 		If true, will automatically extends the base element
 * @example 	scss
 * \@include s-Bem(card) {
 * 	background:white;
 *
 * 	\@include s-beM(blue) {
 * 		background: blue;
 * 	}
 * }
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin s-beM(
	$name,
	$extend : false,
	$standelone : s-setting('BEM.standelone')
) {
	$separator : s-setting('BEM.modifier-separator');
	$this : #{&};
	@at-root {
		#{$this}#{$separator}#{$name} {
			@if $extend {
				@each $ext in $extend {
					@extend #{$this}#{$separator}#{$ext} !optional;
				}
			}
			@if $standelone {
				@extend #{$this} !optional;
			}
			@content;
		}
	}
}
