%corner-badge {
	position: absolute;
	display: block;

	> * {
		position:relative;

	}
	&:before {
		content:'';
		display:block;
		position: absolute;
		border-style: solid;
		border-color: transparent;
	}
}

@mixin s-corner-badge-classes(
	$corners : tl tr bl br,
	$colors : null
) {
	@include s-corner-badge-classes-bare($corners);
	@if $colors {
		@include s-corner-badge-classes-style($colors);
	}
}

@mixin s-corner-badge-classes-bare(
	$corners : tl tr bl br
) {
	@include s-component('corner-badge') {

		// @TODO parse properties
		@if $_sugar-test-arguments {
		}

		.#{s-component()} {
			@extend %corner-badge;
	        $w : s-lnf(padding-vertical) * 2 + 1em;
	    	font-size : 1em;
	    	width: $w;
	    	height: $w;
	    	padding: s-lnf(padding-vertical) * .4;

	    	&:before {
	    		border-width: $w / 2;
	    	}
	    }

		@if (index($corners, tl)) {
			/**
			 * @name 	#{_start-case(s-component())} top left
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <div class="#{s-component()} #{s-component()}--tl">
			 * 	<!-- content here -->
			 * </div>
			 */
			.#{s-component()}--tl {
				top:0; left:0;

				&:before {
					border-right-color: transparent !important;
					border-bottom-color: transparent !important;
					top:0; left:0;
				}
			}
		}
		@if (index($corners, tr)) {
			/**
			 * @name 	#{_start-case(s-component())} top right
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <div class="#{s-component()} #{s-component()}--tr">
			 * 	<!-- content here -->
			 * </div>
			 */
			.#{s-component()}--tr {
				top:0; right:0;
				text-align:right;

				&:before {
					border-bottom-color: transparent !important;
					border-left-color: transparent !important;
					top:0; right:0;
				}
			}
		}
		@if (index($corners, bl)) {
			/**
			 * @name 	#{_start-case(s-component())} bottom left
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <div class="#{s-component()} #{s-component()}--bl">
			 * 	<!-- content here -->
			 * </div>
			 */
			.#{s-component()}--bl {
				bottom:0; left:0;

				&:before {
					border-top-color: transparent !important;
					border-right-color: transparent !important;
					// border-bottom-color: transparent !important;
					bottom:0; left:0;
				}
			}
		}
		@if (index($corners, br)) {
			/**
			 * @name 	#{_start-case(s-component())} bottom right
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <div class="#{s-component()} #{s-component()}--br">
			 * 	<!-- content here -->
			 * </div>
			 */
			.#{s-component()}--br {
				bottom:0; right:0;

				&:before {
					border-top-color: transparent !important;
					border-left-color: transparent !important;
					bottom:0; right:0;
				}
			}
		}
	}
}

@mixin s-corner-badge-classes-style(
	$colors : default primary secondary
) {
	// @TODO parse properties
	@if $_sugar-test-arguments {
		// $colors : s-test-argument('s-corner-badge-classes-style','colors',map-keys(s-setting('colors')),$colors);
	}
	@include s-component('corner-badge') {
		.#{s-component()} {
			color: white;
			&:before {
				border-color: s-color(default);
			}
		}
		@each $color in $colors {
			/**
			 * @name 	<span class="c-#{$color}">#{_start-case($color)}</span> #{_start-case(s-component())}
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <div class="#{s-component()} #{s-component()}--tl #{s-component()}--#{$color}">
			 * 	<!-- content here -->
			 * </div>
			 */
			.#{s-component()}--#{$color} {
				&:before {
					border-color: s-color($color);
				}
			}
		}
	}
}
