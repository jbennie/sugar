$_s-corner-badge-component-inited : false;
@mixin s-corner-badge-component-init() {
	@if not $_s-corner-badge-component-inited {
		$_s-corner-badge-component-inited : true ! global;

		%corner-badge {
			position: absolute;
			display: block;

			> * {
				position:relative;

			}

			&:before {
				content:'';
				display:block;
				position: absolute;
				border-style: solid;
				border-color: transparent;
			}
		}
	}
}

@mixin s-corner-badge-component(
	$corners : tl tr bl br,
	$colors : null
) {
	@include s-corner-badge-component-bare($corners);
	@if $colors {
		@include s-corner-badge-component-style($colors);
	}
}

@mixin s-corner-badge-component-bare(
	$corners : tl tr bl br
) {
	@include s-corner-badge-component-init();
	@include s-component('s-corner-badge') {

		// @TODO parse properties
		@if $_sugar-test-arguments {
		}

		#{s-component()} {
			@extend %corner-badge;
	        $w : s-lnf(padding-vertical) * 2 + s-lnf(font-size);
	    	font-size : s-lnf(font-size);
	    	width: $w;
	    	height: $w;
	    	padding: s-lnf(padding-vertical) * .4;
			// @extend #{s-component()}[align="tr"];

	    	&:before {
	    		border-width: $w / 2;
	    	}
	    }

		@if (index($corners, tl)) {
			/**
			 * @name 	#{s-component()} top left
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <#{s-component()} align="tl">
			 * 	<!-- content here -->
			 * </#{s-component()}>
			 */
			#{s-component()}[align="tl"] {
				top:0; left:0;

				&:before {
					border-right-color: transparent !important;
					border-bottom-color: transparent !important;
					top:0; left:0;
				}
			}
		}
		@if (index($corners, tr)) {
			/**
			 * @name 	#{s-component()} top right
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <#{s-component()} align="tr">
			 * 	<!-- content here -->
			 * </#{s-component()}>
			 */
			#{s-component()}[align="tr"] {
				top:0; right:0;
				text-align:right;

				&:before {
					border-bottom-color: transparent !important;
					border-left-color: transparent !important;
					top:0; right:0;
				}
			}
		}
		@if (index($corners, bl)) {
			/**
			 * @name 	#{s-component()} bottom left
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <#{s-component()} align="bl">
			 * 	<!-- content here -->
			 * </#{s-component()}>
			 */
			#{s-component()}[align="bl"] {
				bottom:0; left:0;

				&:before {
					border-top-color: transparent !important;
					border-right-color: transparent !important;
					// border-bottom-color: transparent !important;
					bottom:0; left:0;
				}
			}
		}
		@if (index($corners, br)) {
			/**
			 * @name 	#{s-component()} bottom right
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <#{s-component()} align="br">
			 * 	<!-- content here -->
			 * </#{s-component()}>
			 */
			#{s-component()}[align="br"] {
				bottom:0; right:0;

				&:before {
					border-top-color: transparent !important;
					// border-right-color: transparent !important;
					border-left-color: transparent !important;
					bottom:0; right:0;
				}
			}
		}
	}
}

@mixin s-corner-badge-component-style(
	$colors : default primary secondary
) {
	// @TODO parse properties
	@if $_sugar-test-arguments {
		// $colors : s-test-argument('s-corner-badge-component-style','colors',map-keys(s-setting('colors')),$colors);
	}
	@include s-component('s-corner-badge') {
		#{s-component()} {
			color: white;
			&:before {
				border-color: s-color(default);
			}
		}
		@each $color in $colors {
			/**
			 * @name 	#{s-component()} #{$color}
			 * @styleguide 	Components / #{_start-case(s-component())}
			 * @example 	html
			 * <#{s-component()} align="tl" color="#{$color}">
			 * 	<!-- content here -->
			 * </#{s-component()}>
			 */
			#{s-component()}[color="#{$color}"] {
				&:before {
					border-color: s-color($color);
				}
			}
		}
	}
}
